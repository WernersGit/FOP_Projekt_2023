{"submissionInfo":{"assignmentId":"projekt","jagrVersion":"0.9.0","sourceSets":[{"name":"main","files":{"java":["projekt/Main.java",".DS_Store","projekt/Projekt.java","projekt/runner/handler/SimulationSetupHandler.java","projekt/runner/handler/ResultHandler.java","projekt/runner/handler/SimulationFinishedHandler.java","projekt/runner/RunnerImpl.java","projekt/runner/Runner.java","projekt/BasicProjektImpl.java","projekt/.DS_Store","projekt/delivery/rating/TravelDistanceRater.java","projekt/delivery/rating/RatingCriteria.java","projekt/delivery/rating/InTimeRater.java","projekt/delivery/rating/Rater.java","projekt/delivery/rating/AmountDeliveredRater.java","projekt/delivery/.DS_Store","projekt/delivery/archetype/ProblemGroupImpl.java","projekt/delivery/archetype/ProblemGroup.java","projekt/delivery/archetype/ProblemArchetype.java","projekt/delivery/archetype/ProblemArchetypeImpl.java","projekt/delivery/runner/AbstractRunner.java","projekt/delivery/runner/Runner.java","projekt/delivery/runner/BasicRunner.java","projekt/delivery/simulation/BasicDeliverySimulation.java","projekt/delivery/simulation/Simulation.java","projekt/delivery/simulation/SimulationListener.java","projekt/delivery/simulation/SimulationConfig.java","projekt/delivery/generator/.DS_Store","projekt/delivery/generator/FridayOrderGenerator.java","projekt/delivery/generator/OrderGenerator.java","projekt/delivery/generator/EmptyOrderGenerator.java","projekt/delivery/routing/RegionImpl.java","projekt/delivery/routing/OccupiedEdgeImpl.java","projekt/delivery/routing/Region.java","projekt/delivery/routing/PathCalculator.java","projekt/delivery/routing/VehicleImpl.java","projekt/delivery/routing/AbstractOccupied.java","projekt/delivery/routing/VehicleManager.java","projekt/delivery/routing/OccupiedRestaurantImpl.java","projekt/delivery/routing/NodeImpl.java","projekt/delivery/routing/RestaurantImpl.java","projekt/delivery/routing/VehicleManagerImpl.java","projekt/delivery/routing/VehicleOverloadedException.java","projekt/delivery/routing/CachedPathCalculator.java","projekt/delivery/routing/NeighborhoodImpl.java","projekt/delivery/routing/EdgeImpl.java","projekt/delivery/routing/Vehicle.java","projekt/delivery/routing/OccupiedNeighborhoodImpl.java","projekt/delivery/routing/VehicleManagerBuilderImpl.java","projekt/delivery/routing/OccupiedNodeImpl.java","projekt/delivery/routing/ConfirmedOrder.java","projekt/delivery/routing/RegionBuilderImpl.java","projekt/delivery/routing/DijkstraPathCalculator.java","projekt/delivery/service/AbstractDeliveryService.java","projekt/delivery/service/BasicDeliveryService.java","projekt/delivery/service/OurDeliveryService.java","projekt/delivery/service/DeliveryService.java","projekt/delivery/service/BogoDeliveryService.java","projekt/delivery/event/ArrivedAtEdgeEventImpl.java","projekt/delivery/event/ArrivedAtNeighborhoodEvent.java","projekt/delivery/event/EventBus.java","projekt/delivery/event/DeliverOrderEventImpl.java","projekt/delivery/event/EventImpl.java","projekt/delivery/event/ArrivedAtNeighborhoodEventImpl.java","projekt/delivery/event/OrderReceivedEventImpl.java","projekt/delivery/event/OrderReceivedEvent.java","projekt/delivery/event/VehicleEventImpl.java","projekt/delivery/event/Event.java","projekt/delivery/event/LoadOrderEventImpl.java","projekt/delivery/event/SpawnEventImpl.java","projekt/delivery/event/ArrivedAtNodeEvent.java","projekt/delivery/event/VehicleEvent.java","projekt/delivery/event/LoadOrderEvent.java","projekt/delivery/event/ArrivedAtRestaurantEvent.java","projekt/delivery/event/DeliverOrderEvent.java","projekt/delivery/event/ArrivedAtNodeEventImpl.java","projekt/delivery/event/ArrivedAtRestaurantEventImpl.java","projekt/delivery/event/SpawnEvent.java","projekt/delivery/event/ArrivedAtEdgeEvent.java","projekt/base/ChessboardDistanceCalculator.java","projekt/base/ManhattanDistanceCalculator.java","projekt/base/TickInterval.java","projekt/base/Location.java","projekt/base/EuclideanDistanceCalculator.java","projekt/base/DistanceCalculator.java","projekt/io/RegionIO.java","projekt/io/ProblemArchetypeIO.java","projekt/io/IOHelper.java","projekt/io/RaterFactoryMapIO.java","projekt/io/VehicleManagerIO.java","projekt/io/OrderGeneratorFactoryIO.java","projekt/gui/pane/ControlsPane.java","projekt/gui/pane/MapPane.java","projekt/gui/TUColors.java","projekt/gui/controller/MainMenuSceneController.java","projekt/gui/controller/MenuSceneController.java","projekt/gui/controller/SceneAndController.java","projekt/gui/controller/SceneController.java","projekt/gui/controller/ControlledScene.java","projekt/gui/controller/SimulationSceneController.java","projekt/gui/controller/RaterSceneController.java","projekt/gui/MyApplication.java","projekt/gui/scene/SimulationScene.java","projekt/gui/scene/MenuScene.java","projekt/gui/scene/SceneSwitcher.java","projekt/gui/scene/MainMenuScene.java","projekt/gui/scene/RaterScene.java","projekt/GUIProjektImpl.java"],"resources":["projekt/io/presets/problem3.txt","projekt/io/presets/problem2.txt","projekt/io/presets/problem1.txt","projekt/io/presets/problem4.txt","projekt/gui/simulationStyle.css","projekt/gui/raterStyle.css","projekt/gui/darkMode.css","projekt/gui/scene/car.png","projekt/gui/menuStyle.css"]}},{"name":"test","files":{"java":["projekt/ObjectUnitTests.java","projekt/delivery/routing/RegionImplUnitTests.java","projekt/delivery/routing/NodeImplUnitTests.java","projekt/delivery/routing/EdgeImplUnitTests.java","projekt/ComparableUnitTests.java","projekt/base/LocationUnitTests.java"]}}],"dependencyConfigurations":{"compileOnly":["FOP-2223-Projekt-Student:infrastructure:unspecified"],"implementation":["org.jetbrains:annotations:23.0.0","org.tudalgo:algoutils-student:0.6.3","com.formdev:flatlaf:2.0.1","FOP-2223-Projekt-Student:application:unspecified"],"runtimeOnly":["FOP-2223-Projekt-Student:infrastructure:unspecified"],"testImplementation":["org.junit.jupiter:junit-jupiter:5.9.1","FOP-2223-Projekt-Student:application:unspecified","FOP-2223-Projekt-Student:infrastructure:unspecified","FOP-2223-Projekt-Student:domain:unspecified"]},"repositoryConfigurations":[{"name":"MavenLocal","url":"file:/Users/jonaswerner/.m2/repository/"},{"name":"maven","url":"https://s01.oss.sonatype.org/content/repositories/snapshots"},{"name":"MavenRepo","url":"https://repo.maven.apache.org/maven2/"}],"studentId":"jw18xexo","firstName":"Jonas","lastName":"Werner"},"totalPoints":83,"feedbackComment":"<html><head><meta charset=\"utf-8\"><link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/bootstrap@4.0.0/dist/css/bootstrap.min.css\" integrity=\"sha384-Gn5384xqQ1aoWXA+058RXPxPg6fy4IWvTNh0E263XmFcJlSAwiGgFAW/dAiS6JXm\" crossorigin=\"anonymous\"></head><body><div class=\"container\"><table class=\"table table-hover\"><thead><tr class=\"\"><th scope=\"col\" class=\"\" id=\"cell-0\">Projekt</th><th scope=\"col\" class=\"\" id=\"cell-1\"></th><th scope=\"col\" class=\"\" id=\"cell-2\"></th><th scope=\"col\" class=\"\" id=\"cell-3\"></th></tr></thead><tbody><tr class=\"\"><th scope=\"col\" class=\"\" id=\"cell-4\">Kriterium</th><th scope=\"col\" class=\"\" id=\"cell-5\">Möglich</th><th scope=\"col\" class=\"\" id=\"cell-6\">Erzielt</th><th scope=\"col\" class=\"\" id=\"cell-7\">Kommentar</th></tr><tr class=\"\"><th scope=\"col\" class=\"\" id=\"cell-8\">H1 | Location</th><th scope=\"col\" class=\"\" id=\"cell-9\">[0, 6]</th><th scope=\"col\" class=\"\" id=\"cell-10\">6</th><th scope=\"col\" class=\"\" id=\"cell-11\"></th></tr><tr class=\"\"><th scope=\"col\" class=\"\" id=\"cell-12\">H1.1 | compareTo</th><th scope=\"col\" class=\"\" id=\"cell-13\">[0, 2]</th><th scope=\"col\" class=\"\" id=\"cell-14\">2</th><th scope=\"col\" class=\"\" id=\"cell-15\"></th></tr><tr class=\"\"><td class=\"\" id=\"cell-16\"><span class=\"badge\">1</span> Die Methode compareTo der Klasse Location funktioniert vollständig korrekt wenn die x Werte der verglichenen Positionen verschieden sind oder beide Positionen gleich sind</td><td class=\"\" id=\"cell-17\">[0, 1]</td><td class=\"table-success\" id=\"cell-18\">1</td><td class=\"\" id=\"cell-19\"></td></tr><tr class=\"\"><td class=\"\" id=\"cell-20\"><span class=\"badge\">2</span> Die Methode compareTo der Klasse Location funktioniert vollständig korrekt</td><td class=\"\" id=\"cell-21\">[0, 1]</td><td class=\"table-success\" id=\"cell-22\">1</td><td class=\"\" id=\"cell-23\"></td></tr><tr class=\"\"><th scope=\"col\" class=\"\" id=\"cell-24\">H1.2 | hashCode</th><th scope=\"col\" class=\"\" id=\"cell-25\">[0, 2]</th><th scope=\"col\" class=\"\" id=\"cell-26\">2</th><th scope=\"col\" class=\"\" id=\"cell-27\"></th></tr><tr class=\"\"><td class=\"\" id=\"cell-28\"><span class=\"badge\">3</span> Die Methode hashCode der Klasse Location funktioniert vollständig korrekt</td><td class=\"\" id=\"cell-29\">[0, 2]</td><td class=\"table-success\" id=\"cell-30\">2</td><td class=\"\" id=\"cell-31\"></td></tr><tr class=\"\"><th scope=\"col\" class=\"\" id=\"cell-32\">H1.3 | equals</th><th scope=\"col\" class=\"\" id=\"cell-33\">[0, 1]</th><th scope=\"col\" class=\"\" id=\"cell-34\">1</th><th scope=\"col\" class=\"\" id=\"cell-35\"></th></tr><tr class=\"\"><td class=\"\" id=\"cell-36\"><span class=\"badge\">4</span> Die Methode equals der Klasse Location funktioniert vollständig korrekt</td><td class=\"\" id=\"cell-37\">[0, 1]</td><td class=\"table-success\" id=\"cell-38\">1</td><td class=\"\" id=\"cell-39\"></td></tr><tr class=\"\"><th scope=\"col\" class=\"\" id=\"cell-40\">H1.4 | toString</th><th scope=\"col\" class=\"\" id=\"cell-41\">[0, 1]</th><th scope=\"col\" class=\"\" id=\"cell-42\">1</th><th scope=\"col\" class=\"\" id=\"cell-43\"></th></tr><tr class=\"\"><td class=\"\" id=\"cell-44\"><span class=\"badge\">5</span> Die Methode toString der Klasse Location funktioniert vollständig korrekt</td><td class=\"\" id=\"cell-45\">[0, 1]</td><td class=\"table-success\" id=\"cell-46\">1</td><td class=\"\" id=\"cell-47\"></td></tr><tr class=\"\"><th scope=\"col\" class=\"\" id=\"cell-48\">H2 | RegionImpl</th><th scope=\"col\" class=\"\" id=\"cell-49\">[0, 13]</th><th scope=\"col\" class=\"\" id=\"cell-50\">13</th><th scope=\"col\" class=\"\" id=\"cell-51\"></th></tr><tr class=\"\"><th scope=\"col\" class=\"\" id=\"cell-52\">H2.1 | Wo Noed?</th><th scope=\"col\" class=\"\" id=\"cell-53\">[0, 1]</th><th scope=\"col\" class=\"\" id=\"cell-54\">1</th><th scope=\"col\" class=\"\" id=\"cell-55\"></th></tr><tr class=\"\"><td class=\"\" id=\"cell-56\"><span class=\"badge\">6</span> Die Methode getNode der Klasse RegionImpl ist vollständig korrekt</td><td class=\"\" id=\"cell-57\">[0, 1]</td><td class=\"table-success\" id=\"cell-58\">1</td><td class=\"\" id=\"cell-59\"></td></tr><tr class=\"\"><th scope=\"col\" class=\"\" id=\"cell-60\">H2.2 | Da Noed!</th><th scope=\"col\" class=\"\" id=\"cell-61\">[0, 2]</th><th scope=\"col\" class=\"\" id=\"cell-62\">2</th><th scope=\"col\" class=\"\" id=\"cell-63\"></th></tr><tr class=\"\"><td class=\"\" id=\"cell-64\"><span class=\"badge\">7</span> Die Methode putNode der Klasse RegionImpl funktioniert für korrekte Eingaben</td><td class=\"\" id=\"cell-65\">[0, 1]</td><td class=\"table-success\" id=\"cell-66\">1</td><td class=\"\" id=\"cell-67\"></td></tr><tr class=\"\"><td class=\"\" id=\"cell-68\"><span class=\"badge\">8</span> Die Methode putNode der Klasse RegionImpl funktioniert vollständig korrekt</td><td class=\"\" id=\"cell-69\">[0, 1]</td><td class=\"table-success\" id=\"cell-70\">1</td><td class=\"\" id=\"cell-71\"></td></tr><tr class=\"\"><th scope=\"col\" class=\"\" id=\"cell-72\">H2.3 | getEdge</th><th scope=\"col\" class=\"\" id=\"cell-73\">[0, 3]</th><th scope=\"col\" class=\"\" id=\"cell-74\">3</th><th scope=\"col\" class=\"\" id=\"cell-75\"></th></tr><tr class=\"\"><td class=\"\" id=\"cell-76\"><span class=\"badge\">9</span> Die Methode getEdge der Klasse RegionImpl funktioniert korrekt wenn die gesuchte Edge nicht enthalten ist und locationA kleiner als locationB ist</td><td class=\"\" id=\"cell-77\">[0, 1]</td><td class=\"table-success\" id=\"cell-78\">1</td><td class=\"\" id=\"cell-79\"></td></tr><tr class=\"\"><td class=\"\" id=\"cell-80\"><span class=\"badge\">10</span> Die Methode getEdge der Klasse RegionImpl funktioniert korrekt wenn locationA kleiner als locationB ist</td><td class=\"\" id=\"cell-81\">[0, 1]</td><td class=\"table-success\" id=\"cell-82\">1</td><td class=\"\" id=\"cell-83\"></td></tr><tr class=\"\"><td class=\"\" id=\"cell-84\"><span class=\"badge\">11</span> Die Methode getEdge der Klasse RegionImpl funktioniert vollständig korrekt</td><td class=\"\" id=\"cell-85\">[0, 1]</td><td class=\"table-success\" id=\"cell-86\">1</td><td class=\"\" id=\"cell-87\"></td></tr><tr class=\"\"><th scope=\"col\" class=\"\" id=\"cell-88\">H2.4 | putEdge</th><th scope=\"col\" class=\"\" id=\"cell-89\">[0, 4]</th><th scope=\"col\" class=\"\" id=\"cell-90\">4</th><th scope=\"col\" class=\"\" id=\"cell-91\"></th></tr><tr class=\"\"><td class=\"\" id=\"cell-92\"><span class=\"badge\">12</span> Die Methode putEdge der Klasse RegionImpl funktioniert für inkorrekte Eingaben</td><td class=\"\" id=\"cell-93\">[0, 1]</td><td class=\"table-success\" id=\"cell-94\">1</td><td class=\"\" id=\"cell-95\"></td></tr><tr class=\"\"><td class=\"\" id=\"cell-96\"><span class=\"badge\">13</span> Die Methode putEdge der Klasse RegionImpl aktualisiert die Liste allEdges korrekt</td><td class=\"\" id=\"cell-97\">[0, 1]</td><td class=\"table-success\" id=\"cell-98\">1</td><td class=\"\" id=\"cell-99\"></td></tr><tr class=\"\"><td class=\"\" id=\"cell-100\"><span class=\"badge\">14</span> Die Methode putEdge der Klasse RegionImpl funktioniert korrekt wenn edges die erste Node bereits enthält</td><td class=\"\" id=\"cell-101\">[0, 1]</td><td class=\"table-success\" id=\"cell-102\">1</td><td class=\"\" id=\"cell-103\"></td></tr><tr class=\"\"><td class=\"\" id=\"cell-104\"><span class=\"badge\">15</span> Die Methode putEdge der Klasse RegionImpl funktioniert vollständig korrekt</td><td class=\"\" id=\"cell-105\">[0, 1]</td><td class=\"table-success\" id=\"cell-106\">1</td><td class=\"\" id=\"cell-107\"></td></tr><tr class=\"\"><th scope=\"col\" class=\"\" id=\"cell-108\">H2.5 | Wo Noeds?</th><th scope=\"col\" class=\"\" id=\"cell-109\">[0, 1]</th><th scope=\"col\" class=\"\" id=\"cell-110\">1</th><th scope=\"col\" class=\"\" id=\"cell-111\"></th></tr><tr class=\"\"><td class=\"\" id=\"cell-112\"><span class=\"badge\">16</span> Die Methoden getNodes und getEdges der Klasse RegionImpl ist vollständig korrekt</td><td class=\"\" id=\"cell-113\">[0, 1]</td><td class=\"table-success\" id=\"cell-114\">1</td><td class=\"\" id=\"cell-115\"></td></tr><tr class=\"\"><th scope=\"col\" class=\"\" id=\"cell-116\">H2.6 | equals</th><th scope=\"col\" class=\"\" id=\"cell-117\">[0, 1]</th><th scope=\"col\" class=\"\" id=\"cell-118\">1</th><th scope=\"col\" class=\"\" id=\"cell-119\"></th></tr><tr class=\"\"><td class=\"\" id=\"cell-120\"><span class=\"badge\">17</span> Die Methode equals der Klasse RegionImpl ist vollständig korrekt</td><td class=\"\" id=\"cell-121\">[0, 1]</td><td class=\"table-success\" id=\"cell-122\">1</td><td class=\"\" id=\"cell-123\"></td></tr><tr class=\"\"><th scope=\"col\" class=\"\" id=\"cell-124\">H2.7 | hashCode</th><th scope=\"col\" class=\"\" id=\"cell-125\">[0, 1]</th><th scope=\"col\" class=\"\" id=\"cell-126\">1</th><th scope=\"col\" class=\"\" id=\"cell-127\"></th></tr><tr class=\"\"><td class=\"\" id=\"cell-128\"><span class=\"badge\">18</span> Die Methode hashCode der Klasse RegionImpl ist vollständig korrekt</td><td class=\"\" id=\"cell-129\">[0, 1]</td><td class=\"table-success\" id=\"cell-130\">1</td><td class=\"\" id=\"cell-131\"></td></tr><tr class=\"\"><th scope=\"col\" class=\"\" id=\"cell-132\">H3 | Routing - Knoten ohne Ende: Interface Node</th><th scope=\"col\" class=\"\" id=\"cell-133\">[0, 9]</th><th scope=\"col\" class=\"\" id=\"cell-134\">9</th><th scope=\"col\" class=\"\" id=\"cell-135\"></th></tr><tr class=\"\"><th scope=\"col\" class=\"\" id=\"cell-136\">H3.1 | getEdge</th><th scope=\"col\" class=\"\" id=\"cell-137\">[0, 1]</th><th scope=\"col\" class=\"\" id=\"cell-138\">1</th><th scope=\"col\" class=\"\" id=\"cell-139\"></th></tr><tr class=\"\"><td class=\"\" id=\"cell-140\"><span class=\"badge\">19</span> Die Methode getEdge der Klasse NodeImpl ist vollständig korrekt</td><td class=\"\" id=\"cell-141\">[0, 1]</td><td class=\"table-success\" id=\"cell-142\">1</td><td class=\"\" id=\"cell-143\"></td></tr><tr class=\"\"><th scope=\"col\" class=\"\" id=\"cell-144\">H3.2 | getAdjacentNodes</th><th scope=\"col\" class=\"\" id=\"cell-145\">[0, 2]</th><th scope=\"col\" class=\"\" id=\"cell-146\">2</th><th scope=\"col\" class=\"\" id=\"cell-147\"></th></tr><tr class=\"\"><td class=\"\" id=\"cell-148\"><span class=\"badge\">20</span> Die Methode getAdjacentNodes der Klasse NodeImpl ist vollständig korrekt</td><td class=\"\" id=\"cell-149\">[0, 2]</td><td class=\"table-success\" id=\"cell-150\">2</td><td class=\"\" id=\"cell-151\"></td></tr><tr class=\"\"><th scope=\"col\" class=\"\" id=\"cell-152\">H3.3 | getAdjacentEdges</th><th scope=\"col\" class=\"\" id=\"cell-153\">[0, 2]</th><th scope=\"col\" class=\"\" id=\"cell-154\">2</th><th scope=\"col\" class=\"\" id=\"cell-155\"></th></tr><tr class=\"\"><td class=\"\" id=\"cell-156\"><span class=\"badge\">21</span> Die Methode getAdjacentEdges der Klasse NodeImpl ist vollständig korrekt</td><td class=\"\" id=\"cell-157\">[0, 2]</td><td class=\"table-success\" id=\"cell-158\">2</td><td class=\"\" id=\"cell-159\"></td></tr><tr class=\"\"><th scope=\"col\" class=\"\" id=\"cell-160\">H3.4 | compareTo</th><th scope=\"col\" class=\"\" id=\"cell-161\">[0, 1]</th><th scope=\"col\" class=\"\" id=\"cell-162\">1</th><th scope=\"col\" class=\"\" id=\"cell-163\"></th></tr><tr class=\"\"><td class=\"\" id=\"cell-164\"><span class=\"badge\">22</span> Die Methode compareTo der Klasse NodeImpl ist vollständig korrekt</td><td class=\"\" id=\"cell-165\">[0, 1]</td><td class=\"table-success\" id=\"cell-166\">1</td><td class=\"\" id=\"cell-167\"></td></tr><tr class=\"\"><th scope=\"col\" class=\"\" id=\"cell-168\">H3.5 | equals</th><th scope=\"col\" class=\"\" id=\"cell-169\">[0, 1]</th><th scope=\"col\" class=\"\" id=\"cell-170\">1</th><th scope=\"col\" class=\"\" id=\"cell-171\"></th></tr><tr class=\"\"><td class=\"\" id=\"cell-172\"><span class=\"badge\">23</span> Die Methode equals der Klasse NodeImpl ist vollständig korrekt</td><td class=\"\" id=\"cell-173\">[0, 1]</td><td class=\"table-success\" id=\"cell-174\">1</td><td class=\"\" id=\"cell-175\"></td></tr><tr class=\"\"><th scope=\"col\" class=\"\" id=\"cell-176\">H3.6 | hashCode</th><th scope=\"col\" class=\"\" id=\"cell-177\">[0, 1]</th><th scope=\"col\" class=\"\" id=\"cell-178\">1</th><th scope=\"col\" class=\"\" id=\"cell-179\"></th></tr><tr class=\"\"><td class=\"\" id=\"cell-180\"><span class=\"badge\">24</span> Die Methode hashCode der Klasse NodeImpl ist vollständig korrekt</td><td class=\"\" id=\"cell-181\">[0, 1]</td><td class=\"table-success\" id=\"cell-182\">1</td><td class=\"\" id=\"cell-183\"></td></tr><tr class=\"\"><th scope=\"col\" class=\"\" id=\"cell-184\">H3.7 | toString</th><th scope=\"col\" class=\"\" id=\"cell-185\">[0, 1]</th><th scope=\"col\" class=\"\" id=\"cell-186\">1</th><th scope=\"col\" class=\"\" id=\"cell-187\"></th></tr><tr class=\"\"><td class=\"\" id=\"cell-188\"><span class=\"badge\">25</span> Die Methode toString der Klasse NodeImpl ist vollständig korrekt</td><td class=\"\" id=\"cell-189\">[0, 1]</td><td class=\"table-success\" id=\"cell-190\">1</td><td class=\"\" id=\"cell-191\"></td></tr><tr class=\"\"><th scope=\"col\" class=\"\" id=\"cell-192\">H4 |  Routing - Kantige Angelegenheit: Interface Edge</th><th scope=\"col\" class=\"\" id=\"cell-193\">[0, 6]</th><th scope=\"col\" class=\"\" id=\"cell-194\">6</th><th scope=\"col\" class=\"\" id=\"cell-195\"></th></tr><tr class=\"\"><th scope=\"col\" class=\"\" id=\"cell-196\">H4.1 | getNode{A,B}</th><th scope=\"col\" class=\"\" id=\"cell-197\">[0, 1]</th><th scope=\"col\" class=\"\" id=\"cell-198\">1</th><th scope=\"col\" class=\"\" id=\"cell-199\"></th></tr><tr class=\"\"><td class=\"\" id=\"cell-200\"><span class=\"badge\">26</span> Die Methoden getNodeA und getNodeB der Klasse EdgeImpl ist vollständig korrekt</td><td class=\"\" id=\"cell-201\">[0, 1]</td><td class=\"table-success\" id=\"cell-202\">1</td><td class=\"\" id=\"cell-203\"></td></tr><tr class=\"\"><th scope=\"col\" class=\"\" id=\"cell-204\">H4.2 | compareTo</th><th scope=\"col\" class=\"\" id=\"cell-205\">[0, 2]</th><th scope=\"col\" class=\"\" id=\"cell-206\">2</th><th scope=\"col\" class=\"\" id=\"cell-207\"></th></tr><tr class=\"\"><td class=\"\" id=\"cell-208\"><span class=\"badge\">27</span> Die Methode compareTo der Klasse EdgeImpl funktioniert korrekt wenn die nodeA verschieden ist</td><td class=\"\" id=\"cell-209\">[0, 1]</td><td class=\"table-success\" id=\"cell-210\">1</td><td class=\"\" id=\"cell-211\"></td></tr><tr class=\"\"><td class=\"\" id=\"cell-212\"><span class=\"badge\">28</span> Die Methode compareTo der Klasse EdgeImpl vollständig korrekt</td><td class=\"\" id=\"cell-213\">[0, 1]</td><td class=\"table-success\" id=\"cell-214\">1</td><td class=\"\" id=\"cell-215\"></td></tr><tr class=\"\"><th scope=\"col\" class=\"\" id=\"cell-216\">H4.3 | equals</th><th scope=\"col\" class=\"\" id=\"cell-217\">[0, 1]</th><th scope=\"col\" class=\"\" id=\"cell-218\">1</th><th scope=\"col\" class=\"\" id=\"cell-219\"></th></tr><tr class=\"\"><td class=\"\" id=\"cell-220\"><span class=\"badge\">29</span> Die Methode equals der Klasse EdgeImpl ist vollständig korrekt</td><td class=\"\" id=\"cell-221\">[0, 1]</td><td class=\"table-success\" id=\"cell-222\">1</td><td class=\"\" id=\"cell-223\"></td></tr><tr class=\"\"><th scope=\"col\" class=\"\" id=\"cell-224\">H4.4 | hashCode</th><th scope=\"col\" class=\"\" id=\"cell-225\">[0, 1]</th><th scope=\"col\" class=\"\" id=\"cell-226\">1</th><th scope=\"col\" class=\"\" id=\"cell-227\"></th></tr><tr class=\"\"><td class=\"\" id=\"cell-228\"><span class=\"badge\">30</span> Die Methode hashCode der Klasse EdgeImpl ist vollständig korrekt</td><td class=\"\" id=\"cell-229\">[0, 1]</td><td class=\"table-success\" id=\"cell-230\">1</td><td class=\"\" id=\"cell-231\"></td></tr><tr class=\"\"><th scope=\"col\" class=\"\" id=\"cell-232\">H4.5 | toString</th><th scope=\"col\" class=\"\" id=\"cell-233\">[0, 1]</th><th scope=\"col\" class=\"\" id=\"cell-234\">1</th><th scope=\"col\" class=\"\" id=\"cell-235\"></th></tr><tr class=\"\"><td class=\"\" id=\"cell-236\"><span class=\"badge\">31</span> Die Methode toString der Klasse EdgeImpl ist vollständig korrekt</td><td class=\"\" id=\"cell-237\">[0, 1]</td><td class=\"table-success\" id=\"cell-238\">1</td><td class=\"\" id=\"cell-239\"></td></tr><tr class=\"\"><th scope=\"col\" class=\"\" id=\"cell-240\">H5 | Hab mein Wage, voll gelade...</th><th scope=\"col\" class=\"\" id=\"cell-241\">[0, 16]</th><th scope=\"col\" class=\"\" id=\"cell-242\">16</th><th scope=\"col\" class=\"\" id=\"cell-243\"></th></tr><tr class=\"\"><th scope=\"col\" class=\"\" id=\"cell-244\">H5.1 | Das Züglein an der wage</th><th scope=\"col\" class=\"\" id=\"cell-245\">[0, 1]</th><th scope=\"col\" class=\"\" id=\"cell-246\">1</th><th scope=\"col\" class=\"\" id=\"cell-247\"></th></tr><tr class=\"\"><td class=\"\" id=\"cell-248\"><span class=\"badge\">32</span> Die Methode getCurrentWeight des Interfaces Vehicle ist vollständig korrekt</td><td class=\"\" id=\"cell-249\">[0, 1]</td><td class=\"table-success\" id=\"cell-250\">1</td><td class=\"\" id=\"cell-251\"></td></tr><tr class=\"\"><th scope=\"col\" class=\"\" id=\"cell-252\">H5.2 | Bestellungen ein- und ausladen</th><th scope=\"col\" class=\"\" id=\"cell-253\">[0, 3]</th><th scope=\"col\" class=\"\" id=\"cell-254\">3</th><th scope=\"col\" class=\"\" id=\"cell-255\"></th></tr><tr class=\"\"><td class=\"\" id=\"cell-256\"><span class=\"badge\">33</span> Die Methode loadOrder der Klasse VehicleImpl funktioniert für korrekt Eingaben</td><td class=\"\" id=\"cell-257\">[0, 1]</td><td class=\"table-success\" id=\"cell-258\">1</td><td class=\"\" id=\"cell-259\"></td></tr><tr class=\"\"><td class=\"\" id=\"cell-260\"><span class=\"badge\">34</span> Die Methode loadOrder der Klasse VehicleImpl funktioniert vollständig korrekt</td><td class=\"\" id=\"cell-261\">[0, 1]</td><td class=\"table-success\" id=\"cell-262\">1</td><td class=\"\" id=\"cell-263\"></td></tr><tr class=\"\"><td class=\"\" id=\"cell-264\"><span class=\"badge\">35</span> Die Methode unloadOrder der Klasse VehicleImpl funktioniert vollständig korrekt</td><td class=\"\" id=\"cell-265\">[0, 1]</td><td class=\"table-success\" id=\"cell-266\">1</td><td class=\"\" id=\"cell-267\"></td></tr><tr class=\"\"><th scope=\"col\" class=\"\" id=\"cell-268\">H5.3 | Ein Weg nach vorner</th><th scope=\"col\" class=\"\" id=\"cell-269\">[0, 6]</th><th scope=\"col\" class=\"\" id=\"cell-270\">6</th><th scope=\"col\" class=\"\" id=\"cell-271\"></th></tr><tr class=\"\"><td class=\"\" id=\"cell-272\"><span class=\"badge\">36</span> Die Methode moveQueued der Klasse VehicleImpl funktioniert für inkorekkte Eingaben</td><td class=\"\" id=\"cell-273\">[0, 1]</td><td class=\"table-success\" id=\"cell-274\">1</td><td class=\"\" id=\"cell-275\"></td></tr><tr class=\"\"><td class=\"\" id=\"cell-276\"><span class=\"badge\">37</span> Die Methode moveQueued der Klasse VehicleImpl funktioniert wenn die moveQueue zuvor keine Elemente beinhaltet hat</td><td class=\"\" id=\"cell-277\">[0, 1]</td><td class=\"table-success\" id=\"cell-278\">1</td><td class=\"\" id=\"cell-279\"></td></tr><tr class=\"\"><td class=\"\" id=\"cell-280\"><span class=\"badge\">38</span> Die Methode moveQueued der Klasse VehicleImpl funktioniert wenn die moveQueue zuvor ein Element beinhaltet hat</td><td class=\"\" id=\"cell-281\">[0, 1]</td><td class=\"table-success\" id=\"cell-282\">1</td><td class=\"\" id=\"cell-283\"></td></tr><tr class=\"\"><td class=\"\" id=\"cell-284\"><span class=\"badge\">39</span> Die Methode moveQueued der Klasse VehicleImpl funktioniert wenn die moveQueue zuvor mehrere Elemente beinhaltet hat</td><td class=\"\" id=\"cell-285\">[0, 1]</td><td class=\"table-success\" id=\"cell-286\">1</td><td class=\"\" id=\"cell-287\"></td></tr><tr class=\"\"><td class=\"\" id=\"cell-288\"><span class=\"badge\">40</span> Die Methode moveQueued der Klasse VehicleImpl setzt die arrivalAction korrekt</td><td class=\"\" id=\"cell-289\">[0, 1]</td><td class=\"table-success\" id=\"cell-290\">1</td><td class=\"\" id=\"cell-291\"></td></tr><tr class=\"\"><td class=\"\" id=\"cell-292\"><span class=\"badge\">41</span> Die Methode moveQueued der Klasse VehicleImpl funktioniert vollständig korrekt</td><td class=\"\" id=\"cell-293\">[0, 1]</td><td class=\"table-success\" id=\"cell-294\">1</td><td class=\"\" id=\"cell-295\"></td></tr><tr class=\"\"><th scope=\"col\" class=\"\" id=\"cell-296\">H5.4 | Auf anderen Wegen</th><th scope=\"col\" class=\"\" id=\"cell-297\">[0, 6]</th><th scope=\"col\" class=\"\" id=\"cell-298\">6</th><th scope=\"col\" class=\"\" id=\"cell-299\"></th></tr><tr class=\"\"><td class=\"\" id=\"cell-300\"><span class=\"badge\">42</span> Die Methode moveDirect der Klasse VehicleImpl funktioniert für inkorrekte Eingaben</td><td class=\"\" id=\"cell-301\">[0, 1]</td><td class=\"table-success\" id=\"cell-302\">1</td><td class=\"\" id=\"cell-303\"></td></tr><tr class=\"\"><td class=\"\" id=\"cell-304\"><span class=\"badge\">43</span> Die Methode moveDirect der Klasse VehicleImpl leert die moveQueue korrekt</td><td class=\"\" id=\"cell-305\">[0, 1]</td><td class=\"table-success\" id=\"cell-306\">1</td><td class=\"\" id=\"cell-307\"></td></tr><tr class=\"\"><td class=\"\" id=\"cell-308\"><span class=\"badge\">44</span> Die Methode moveDirect der Klasse VehicleImpl funktioniert korrekt wenn sich das Fahrzeug auf einem Knoten befindet</td><td class=\"\" id=\"cell-309\">[0, 1]</td><td class=\"table-success\" id=\"cell-310\">1</td><td class=\"\" id=\"cell-311\"></td></tr><tr class=\"\"><td class=\"\" id=\"cell-312\"><span class=\"badge\">45</span> Die Methode moveDirect der Klasse VehicleImpl funktioniert korrekt wenn sich das Fahrzeug auf einer Kante befindet und sich das Fahrzeug momentan zum Knoten A der Kante bewegt</td><td class=\"\" id=\"cell-313\">[0, 1]</td><td class=\"table-success\" id=\"cell-314\">1</td><td class=\"\" id=\"cell-315\"></td></tr><tr class=\"\"><td class=\"\" id=\"cell-316\"><span class=\"badge\">46</span> Die Methode moveDirect der Klasse VehicleImpl funktioniert korrekt wenn sich das Fahrzeug auf einer Kante befindet und sich das Fahrzeug momentan zum Knoten B der Kante bewegt</td><td class=\"\" id=\"cell-317\">[0, 1]</td><td class=\"table-success\" id=\"cell-318\">1</td><td class=\"\" id=\"cell-319\"></td></tr><tr class=\"\"><td class=\"\" id=\"cell-320\"><span class=\"badge\">47</span> Die Methode moveDirect der Klasse VehicleImpl funktioniert vollständig korrekt</td><td class=\"\" id=\"cell-321\">[0, 1]</td><td class=\"table-success\" id=\"cell-322\">1</td><td class=\"\" id=\"cell-323\"></td></tr><tr class=\"\"><th scope=\"col\" class=\"\" id=\"cell-324\">H6 | Wo ist eigentlich mein Auto?</th><th scope=\"col\" class=\"\" id=\"cell-325\">[0, 12]</th><th scope=\"col\" class=\"\" id=\"cell-326\">12</th><th scope=\"col\" class=\"\" id=\"cell-327\"></th></tr><tr class=\"\"><th scope=\"col\" class=\"\" id=\"cell-328\">H6.1 | toOccupiedNOdes & toOccupiedEdges</th><th scope=\"col\" class=\"\" id=\"cell-329\">[0, 4]</th><th scope=\"col\" class=\"\" id=\"cell-330\">4</th><th scope=\"col\" class=\"\" id=\"cell-331\"></th></tr><tr class=\"\"><td class=\"\" id=\"cell-332\"><span class=\"badge\">48</span> Die Methode toOccupiedNodes der Klasse VehicleManagerImpl funktioniert korrekt wenn die Eingaben vom dynamischen Typen NodeImpl sind</td><td class=\"\" id=\"cell-333\">[0, 1]</td><td class=\"table-success\" id=\"cell-334\">1</td><td class=\"\" id=\"cell-335\"></td></tr><tr class=\"\"><td class=\"\" id=\"cell-336\"><span class=\"badge\">49</span> Die Methode toOccupiedNodes der Klasse VehicleManagerImpl funktioniert korrekt wenn die Eingaben von einem Subtypen von NodeImpl sind</td><td class=\"\" id=\"cell-337\">[0, 1]</td><td class=\"table-success\" id=\"cell-338\">1</td><td class=\"\" id=\"cell-339\"></td></tr><tr class=\"\"><td class=\"\" id=\"cell-340\"><span class=\"badge\">50</span> Die Methode toOccupiedEdges der Klasse VehicleManagerImpl funktioniert vollständig korrekt</td><td class=\"\" id=\"cell-341\">[0, 1]</td><td class=\"table-success\" id=\"cell-342\">1</td><td class=\"\" id=\"cell-343\"></td></tr><tr class=\"\"><td class=\"\" id=\"cell-344\"><span class=\"badge\">51</span> Die Methoden toOccupiedNodes und toOccupiedEdges der Klasse VehicleManagerImpl funktioniert vollständig korrekt</td><td class=\"\" id=\"cell-345\">[0, 1]</td><td class=\"table-success\" id=\"cell-346\">1</td><td class=\"\" id=\"cell-347\"></td></tr><tr class=\"\"><th scope=\"col\" class=\"\" id=\"cell-348\">H6.2 | getAllOccupied</th><th scope=\"col\" class=\"\" id=\"cell-349\">[0, 1]</th><th scope=\"col\" class=\"\" id=\"cell-350\">1</th><th scope=\"col\" class=\"\" id=\"cell-351\"></th></tr><tr class=\"\"><td class=\"\" id=\"cell-352\"><span class=\"badge\">52</span> Die Methode getAllOccupied Klasse VehicleManagerImpl funktioniert vollständig korrekt</td><td class=\"\" id=\"cell-353\">[0, 1]</td><td class=\"table-success\" id=\"cell-354\">1</td><td class=\"\" id=\"cell-355\"></td></tr><tr class=\"\"><th scope=\"col\" class=\"\" id=\"cell-356\">H6.3 | getOccupied</th><th scope=\"col\" class=\"\" id=\"cell-357\">[0, 4]</th><th scope=\"col\" class=\"\" id=\"cell-358\">4</th><th scope=\"col\" class=\"\" id=\"cell-359\"></th></tr><tr class=\"\"><td class=\"\" id=\"cell-360\"><span class=\"badge\">53</span> Die Methode getOccupied der Klasse VehicleManagerImpl funktioniert für Nodes korrekt</td><td class=\"\" id=\"cell-361\">[0, 1]</td><td class=\"table-success\" id=\"cell-362\">1</td><td class=\"\" id=\"cell-363\"></td></tr><tr class=\"\"><td class=\"\" id=\"cell-364\"><span class=\"badge\">54</span> Die Methode getOccupied der Klasse VehicleManagerImpl funktioniert für Edges korrekt</td><td class=\"\" id=\"cell-365\">[0, 1]</td><td class=\"table-success\" id=\"cell-366\">1</td><td class=\"\" id=\"cell-367\"></td></tr><tr class=\"\"><td class=\"\" id=\"cell-368\"><span class=\"badge\">55</span> Die Methode getOccupied der Klasse VehicleManagerImpl funktioniert für andere Subtypen korrekt</td><td class=\"\" id=\"cell-369\">[0, 1]</td><td class=\"table-success\" id=\"cell-370\">1</td><td class=\"\" id=\"cell-371\"></td></tr><tr class=\"\"><td class=\"\" id=\"cell-372\"><span class=\"badge\">56</span> Die Methode getOccupied der Klasse VehicleManagerImpl funktioniert vollständig korrekt</td><td class=\"\" id=\"cell-373\">[0, 1]</td><td class=\"table-success\" id=\"cell-374\">1</td><td class=\"\" id=\"cell-375\"></td></tr><tr class=\"\"><th scope=\"col\" class=\"\" id=\"cell-376\">H6.4 | getOccupiedNeighborhood</th><th scope=\"col\" class=\"\" id=\"cell-377\">[0, 3]</th><th scope=\"col\" class=\"\" id=\"cell-378\">3</th><th scope=\"col\" class=\"\" id=\"cell-379\"></th></tr><tr class=\"\"><td class=\"\" id=\"cell-380\"><span class=\"badge\">57</span> Die Methode getOccupiedNeighborhood der Klasse VehicleManagerImpl funktioniert für inkorrekte Eingaben</td><td class=\"\" id=\"cell-381\">[0, 1]</td><td class=\"table-success\" id=\"cell-382\">1</td><td class=\"\" id=\"cell-383\"></td></tr><tr class=\"\"><td class=\"\" id=\"cell-384\"><span class=\"badge\">58</span> Die Methode getOccupiedNeighborhood der Klasse VehicleManagerImpl funktioniert vollständig korrekt</td><td class=\"\" id=\"cell-385\">[0, 1]</td><td class=\"table-success\" id=\"cell-386\">1</td><td class=\"\" id=\"cell-387\"></td></tr><tr class=\"\"><td class=\"\" id=\"cell-388\"><span class=\"badge\">59</span> Die Methode getOccupiedNeighborhood der Klasse VehicleManagerImpl funktioniert vollständig korrekt</td><td class=\"\" id=\"cell-389\">[0, 1]</td><td class=\"table-success\" id=\"cell-390\">1</td><td class=\"\" id=\"cell-391\"></td></tr><tr class=\"\"><th scope=\"col\" class=\"\" id=\"cell-392\">H7 | Was gibt es heute zu Essen?</th><th scope=\"col\" class=\"\" id=\"cell-393\">[0, 9]</th><th scope=\"col\" class=\"\" id=\"cell-394\">9</th><th scope=\"col\" class=\"\" id=\"cell-395\"></th></tr><tr class=\"\"><th scope=\"col\" class=\"\" id=\"cell-396\">H7.1 | Ein typischer Freitagabend</th><th scope=\"col\" class=\"\" id=\"cell-397\">[0, 9]</th><th scope=\"col\" class=\"\" id=\"cell-398\">9</th><th scope=\"col\" class=\"\" id=\"cell-399\"></th></tr><tr class=\"\"><td class=\"\" id=\"cell-400\"><span class=\"badge\">60</span> Die Methode generateOrders der Klasse FridayOrderGenerator erzeugt insgesamt orderCount viele Bestellungen</td><td class=\"\" id=\"cell-401\">[0, 1]</td><td class=\"table-success\" id=\"cell-402\">1</td><td class=\"\" id=\"cell-403\"></td></tr><tr class=\"\"><td class=\"\" id=\"cell-404\"><span class=\"badge\">61</span> Die Methode generateOrders der Klasse FridayOrderGenerator erzeugt die Bestellungen normalverteilt</td><td class=\"\" id=\"cell-405\">[0, 1]</td><td class=\"table-success\" id=\"cell-406\">1</td><td class=\"\" id=\"cell-407\"></td></tr><tr class=\"\"><td class=\"\" id=\"cell-408\"><span class=\"badge\">62</span> Die Methode generateOrders der Klasse FridayOrderGenerator erzeugt die Bestellungen mit korrektem Gewicht</td><td class=\"\" id=\"cell-409\">[0, 1]</td><td class=\"table-success\" id=\"cell-410\">1</td><td class=\"\" id=\"cell-411\"></td></tr><tr class=\"\"><td class=\"\" id=\"cell-412\"><span class=\"badge\">63</span> Die Methode generateOrders der Klasse FridayOrderGenerator erzeugt die Bestellungen mit korrekten Positionen</td><td class=\"\" id=\"cell-413\">[0, 1]</td><td class=\"table-success\" id=\"cell-414\">1</td><td class=\"\" id=\"cell-415\"></td></tr><tr class=\"\"><td class=\"\" id=\"cell-416\"><span class=\"badge\">64</span> Die Methode generateOrders der Klasse FridayOrderGenerator erzeugt die Bestellungen mit korrekten DeliveryInterval</td><td class=\"\" id=\"cell-417\">[0, 1]</td><td class=\"table-success\" id=\"cell-418\">1</td><td class=\"\" id=\"cell-419\"></td></tr><tr class=\"\"><td class=\"\" id=\"cell-420\"><span class=\"badge\">65</span> Die Methode generateOrders der Klasse FridayOrderGenerator erzeugt die Bestellungen mit korrektem Essen</td><td class=\"\" id=\"cell-421\">[0, 1]</td><td class=\"table-success\" id=\"cell-422\">1</td><td class=\"\" id=\"cell-423\"></td></tr><tr class=\"\"><td class=\"\" id=\"cell-424\"><span class=\"badge\">66</span> Die Methode generateOrders der Klasse FridayOrderGenerator erzeugt keine Bestellungen nach lastTick</td><td class=\"\" id=\"cell-425\">[0, 1]</td><td class=\"table-success\" id=\"cell-426\">1</td><td class=\"\" id=\"cell-427\"></td></tr><tr class=\"\"><td class=\"\" id=\"cell-428\"><span class=\"badge\">67</span> Die Methode generateOrders der Klasse FridayOrderGenerator erzeugt für den selben tick immer die selben Bestellungen</td><td class=\"\" id=\"cell-429\">[0, 1]</td><td class=\"table-success\" id=\"cell-430\">1</td><td class=\"\" id=\"cell-431\"></td></tr><tr class=\"\"><td class=\"\" id=\"cell-432\"><span class=\"badge\">68</span> Die Methode generateOrders der Klasse FridayOrderGenerator ist vollständig korrekt</td><td class=\"\" id=\"cell-433\">[0, 1]</td><td class=\"table-success\" id=\"cell-434\">1</td><td class=\"\" id=\"cell-435\"></td></tr><tr class=\"\"><th scope=\"col\" class=\"\" id=\"cell-436\">H8 | Habe ich einen guten Job gemacht?</th><th scope=\"col\" class=\"\" id=\"cell-437\">[0, 13]</th><th scope=\"col\" class=\"\" id=\"cell-438\">11</th><th scope=\"col\" class=\"\" id=\"cell-439\"></th></tr><tr class=\"\"><th scope=\"col\" class=\"\" id=\"cell-440\">H8.1 | Habe ich alle Bestellungen ausgeliefert?</th><th scope=\"col\" class=\"\" id=\"cell-441\">[0, 3]</th><th scope=\"col\" class=\"\" id=\"cell-442\">3</th><th scope=\"col\" class=\"\" id=\"cell-443\"></th></tr><tr class=\"\"><td class=\"\" id=\"cell-444\"><span class=\"badge\">69</span> Die Methode getScore der Klasse AmountDeliveredRater liefert den korrekten Wert zurück wenn keine Bestellung ausgeliefert wurde</td><td class=\"\" id=\"cell-445\">[0, 1]</td><td class=\"table-success\" id=\"cell-446\">1</td><td class=\"\" id=\"cell-447\"></td></tr><tr class=\"\"><td class=\"\" id=\"cell-448\"><span class=\"badge\">70</span> Die Methode getScore der Klasse AmountDeliveredRater liefert den korrekten Wert zurück wenn alle Bestellungen ausgeliefert wurden</td><td class=\"\" id=\"cell-449\">[0, 1]</td><td class=\"table-success\" id=\"cell-450\">1</td><td class=\"\" id=\"cell-451\"></td></tr><tr class=\"\"><td class=\"\" id=\"cell-452\"><span class=\"badge\">71</span> Die Methode getScore der Klasse AmountDeliveredRater liefert den korrekten Wert zurück wenn manche Bestellungen ausgeliefert wurden</td><td class=\"\" id=\"cell-453\">[0, 1]</td><td class=\"table-success\" id=\"cell-454\">1</td><td class=\"\" id=\"cell-455\"></td></tr><tr class=\"\"><th scope=\"col\" class=\"\" id=\"cell-456\">H8.2 | War ich pünkltich?</th><th scope=\"col\" class=\"\" id=\"cell-457\">[0, 6]</th><th scope=\"col\" class=\"\" id=\"cell-458\">6</th><th scope=\"col\" class=\"\" id=\"cell-459\"></th></tr><tr class=\"\"><td class=\"\" id=\"cell-460\"><span class=\"badge\">72</span> Die Methode getScore der Klasse InTimeRater liefert den korrekten Wert zurück wenn alle Bestellungen pünktlich ausgeliefert wurden</td><td class=\"\" id=\"cell-461\">[0, 1]</td><td class=\"table-success\" id=\"cell-462\">1</td><td class=\"\" id=\"cell-463\"></td></tr><tr class=\"\"><td class=\"\" id=\"cell-464\"><span class=\"badge\">73</span> Die Methode getScore der Klasse InTimeRater liefert den korrekten Wert zurück wenn alle keine Bestellungen ausgeliefert wurden</td><td class=\"\" id=\"cell-465\">[0, 1]</td><td class=\"table-success\" id=\"cell-466\">1</td><td class=\"\" id=\"cell-467\"></td></tr><tr class=\"\"><td class=\"\" id=\"cell-468\"><span class=\"badge\">74</span> Die Methode getScore der Klasse InTimeRater liefert den korrekten Wert zurück wenn alle Bestellungen zu spät ausgeliefert wurden</td><td class=\"\" id=\"cell-469\">[0, 1]</td><td class=\"table-success\" id=\"cell-470\">1</td><td class=\"\" id=\"cell-471\"></td></tr><tr class=\"\"><td class=\"\" id=\"cell-472\"><span class=\"badge\">75</span> Die Methode getScore der Klasse InTimeRater liefert den korrekten Wert zurück wenn alle Bestellungen zu spät ausgeliefert wurden, aber innerhalb von ignoredTicksOff, ausgeliefert wurden</td><td class=\"\" id=\"cell-473\">[0, 1]</td><td class=\"table-success\" id=\"cell-474\">1</td><td class=\"\" id=\"cell-475\"></td></tr><tr class=\"\"><td class=\"\" id=\"cell-476\"><span class=\"badge\">76</span> Die Methode getScore der Klasse InTimeRater liefert den korrekten Wert zurück wenn alle Bestellungen zu früh ausgeliefert wurden</td><td class=\"\" id=\"cell-477\">[0, 1]</td><td class=\"table-success\" id=\"cell-478\">1</td><td class=\"\" id=\"cell-479\"></td></tr><tr class=\"\"><td class=\"\" id=\"cell-480\"><span class=\"badge\">77</span> Die Methode getScore der Klasse InTimeRater liefert den korrekten Wert für gemischte Eingaben zurück</td><td class=\"\" id=\"cell-481\">[0, 1]</td><td class=\"table-success\" id=\"cell-482\">1</td><td class=\"\" id=\"cell-483\"></td></tr><tr class=\"\"><th scope=\"col\" class=\"\" id=\"cell-484\">H8.3 | Wie viel bin ich gefahren?</th><th scope=\"col\" class=\"\" id=\"cell-485\">[0, 4]</th><th scope=\"col\" class=\"\" id=\"cell-486\">2</th><th scope=\"col\" class=\"\" id=\"cell-487\"></th></tr><tr class=\"\"><td class=\"\" id=\"cell-488\"><span class=\"badge\">78</span> Die Methode getScore der Klasse TravelDistanceRater liefert den korrekten Wert zurück wenn keine Strecke zurückgelegt wurde</td><td class=\"\" id=\"cell-489\">[0, 1]</td><td class=\"table-success\" id=\"cell-490\">1</td><td class=\"\" id=\"cell-491\"></td></tr><tr class=\"\"><td class=\"\" id=\"cell-492\"><span class=\"badge\">79</span> Die Methode getScore der Klasse TravelDistanceRater liefert den korrekten Wert zurück wenn die längste Strecke zurückgelegt wurde</td><td class=\"\" id=\"cell-493\">[0, 1]</td><td class=\"table-success\" id=\"cell-494\">1</td><td class=\"\" id=\"cell-495\"></td></tr><tr class=\"\"><td class=\"\" id=\"cell-496\"><span class=\"badge\">80</span> Die Methode getScore der Klasse TravelDistanceRater liefert den korrekten Wert zurück wenn weniger als die längste Strecke zurückgelegt wurde</td><td class=\"\" id=\"cell-497\">[0, 1]</td><td class=\"table-danger\" id=\"cell-498\">0</td><td class=\"\" id=\"cell-499\"><b>method did not return correct score. Expected 0,733300 but was 0,000000</b> @ TravelDistanceRater#getScore {<div class=\"pl-4\">factor = 0.75</div>}<br><b>expected</b> &lt;true&gt;<br><b>actual</b> &lt;false&gt;<br><br><br>there is 1 more failing test</td></tr><tr class=\"\"><td class=\"\" id=\"cell-500\"><span class=\"badge\">81</span> Die Methode getScore der Klasse TravelDistanceRater funktioniert vollständig korrekt</td><td class=\"\" id=\"cell-501\">[0, 1]</td><td class=\"table-danger\" id=\"cell-502\">0</td><td class=\"\" id=\"cell-503\"><b>method did not return correct score. Expected 0,733300 but was 0,000000</b> @ TravelDistanceRater#getScore {<div class=\"pl-4\">factor = 0.75</div>}<br><b>expected</b> &lt;true&gt;<br><b>actual</b> &lt;false&gt;<br><br><br>there is 1 more failing test</td></tr><tr class=\"\"><th scope=\"col\" class=\"\" id=\"cell-504\">H9 | Einmal Lieferdienst zum Mitnehmen, bitte!</th><th scope=\"col\" class=\"\" id=\"cell-505\">[0, 28]</th><th scope=\"col\" class=\"\" id=\"cell-506\">[0, 20]</th><th scope=\"col\" class=\"\" id=\"cell-507\"></th></tr><tr class=\"\"><th scope=\"col\" class=\"\" id=\"cell-508\">H9.1 | BasicDeliveryService</th><th scope=\"col\" class=\"\" id=\"cell-509\">[0, 8]</th><th scope=\"col\" class=\"\" id=\"cell-510\">0</th><th scope=\"col\" class=\"\" id=\"cell-511\"></th></tr><tr class=\"\"><td class=\"\" id=\"cell-512\"><span class=\"badge\">82</span> Die Methode tick der Klasse BasicDeliveryService liefert die richtigen Events zurück</td><td class=\"\" id=\"cell-513\">[0, 1]</td><td class=\"table-danger\" id=\"cell-514\">0</td><td class=\"\" id=\"cell-515\">CrashException:  @ org.tudalgo.algoutils.student.Student.crash(Student.java:30)</td></tr><tr class=\"\"><td class=\"\" id=\"cell-516\"><span class=\"badge\">83</span> Die Methode tick der Klasse BasicDeliveryService aktualisiert die Liste pendingOrders korrekt</td><td class=\"\" id=\"cell-517\">[0, 1]</td><td class=\"table-danger\" id=\"cell-518\">0</td><td class=\"\" id=\"cell-519\">CrashException:  @ org.tudalgo.algoutils.student.Student.crash(Student.java:30)</td></tr><tr class=\"\"><td class=\"\" id=\"cell-520\"><span class=\"badge\">84</span> Die Methode tick der Klasse BasicDeliveryService lädt so viele Ladungen auf ein Fahrzeug wie möglich</td><td class=\"\" id=\"cell-521\">[0, 1]</td><td class=\"table-danger\" id=\"cell-522\">0</td><td class=\"\" id=\"cell-523\">CrashException:  @ org.tudalgo.algoutils.student.Student.crash(Student.java:30)</td></tr><tr class=\"\"><td class=\"\" id=\"cell-524\"><span class=\"badge\">85</span> Die Methode tick der Klasse BasicDeliveryService setzt die arrivalAction der Farzeuge korrekt</td><td class=\"\" id=\"cell-525\">[0, 1]</td><td class=\"table-danger\" id=\"cell-526\">0</td><td class=\"\" id=\"cell-527\">CrashException:  @ org.tudalgo.algoutils.student.Student.crash(Student.java:30)</td></tr><tr class=\"\"><td class=\"\" id=\"cell-528\"><span class=\"badge\">86</span> Die Methode tick der Klasse BasicDeliveryService funktioniert für mehrere Restaurants korrekt</td><td class=\"\" id=\"cell-529\">[0, 1]</td><td class=\"table-danger\" id=\"cell-530\">0</td><td class=\"\" id=\"cell-531\">CrashException:  @ org.tudalgo.algoutils.student.Student.crash(Student.java:30)</td></tr><tr class=\"\"><td class=\"\" id=\"cell-532\"><span class=\"badge\">87</span> Die Methode tick der Klasse BasicDeliveryService setzt den Pfad der Fahrzeuge korrekt</td><td class=\"\" id=\"cell-533\">[0, 1]</td><td class=\"table-danger\" id=\"cell-534\">0</td><td class=\"\" id=\"cell-535\">CrashException:  @ org.tudalgo.algoutils.student.Student.crash(Student.java:30)</td></tr><tr class=\"\"><td class=\"\" id=\"cell-536\"><span class=\"badge\">88</span> Die Methode tick der Klasse BasicDeliveryService setzt den Pfad der Fahrzeuge korrekt nicht doppelt wenn ein Zielort mehrfach vorkommt</td><td class=\"\" id=\"cell-537\">[0, 1]</td><td class=\"table-danger\" id=\"cell-538\">0</td><td class=\"\" id=\"cell-539\">CrashException:  @ org.tudalgo.algoutils.student.Student.crash(Student.java:30)</td></tr><tr class=\"\"><td class=\"\" id=\"cell-540\"><span class=\"badge\">89</span> Die Methode tick der Klasse BasicDeliveryService funktioniert vollständig korrekt</td><td class=\"\" id=\"cell-541\">[0, 1]</td><td class=\"table-danger\" id=\"cell-542\">0</td><td class=\"\" id=\"cell-543\">CrashException:  @ org.tudalgo.algoutils.student.Student.crash(Student.java:30)</td></tr><tr class=\"\"><th scope=\"col\" class=\"\" id=\"cell-544\">H9.2 | Ihr eigener DeliveryService</th><th scope=\"col\" class=\"\" id=\"cell-545\">[0, 20]</th><th scope=\"col\" class=\"\" id=\"cell-546\">[0, 20]</th><th scope=\"col\" class=\"\" id=\"cell-547\"></th></tr><tr class=\"\"><td class=\"\" id=\"cell-548\"><span class=\"badge\">90</span> Die Klasse OurDeliveryService löst Problem 1 mit einer hinreichend guten Punktzahl</td><td class=\"\" id=\"cell-549\">[0, 5]</td><td class=\"table-warning\" id=\"cell-550\">[0, 5]</td><td class=\"\" id=\"cell-551\">Execute the test method testProblem1(int) in the class src/graderPublic/java/projekt/h9/TutorTests_H9_OurDeliveryServiceTest manually.</td></tr><tr class=\"\"><td class=\"\" id=\"cell-552\"><span class=\"badge\">91</span> Die Klasse OurDeliveryService löst Problem 2 mit einer hinreichend guten Punktzahl</td><td class=\"\" id=\"cell-553\">[0, 5]</td><td class=\"table-warning\" id=\"cell-554\">[0, 5]</td><td class=\"\" id=\"cell-555\">Execute the test method testProblem2(int) in the class src/graderPublic/java/projekt/h9/TutorTests_H9_OurDeliveryServiceTest manually.</td></tr><tr class=\"\"><td class=\"\" id=\"cell-556\"><span class=\"badge\">92</span> Die Klasse OurDeliveryService löst Problem 3 mit einer hinreichend guten Punktzahl</td><td class=\"\" id=\"cell-557\">[0, 5]</td><td class=\"table-warning\" id=\"cell-558\">[0, 5]</td><td class=\"\" id=\"cell-559\">Execute the test method testProblem3(int) in the class src/graderPublic/java/projekt/h9/TutorTests_H9_OurDeliveryServiceTest manually.</td></tr><tr class=\"\"><td class=\"\" id=\"cell-560\"><span class=\"badge\">93</span> Die Klasse OurDeliveryService löst Problem 4 mit einer hinreichend guten Punktzahl</td><td class=\"\" id=\"cell-561\">[0, 5]</td><td class=\"table-warning\" id=\"cell-562\">[0, 5]</td><td class=\"\" id=\"cell-563\">Execute the test method testProblem4(int) in the class src/graderPublic/java/projekt/h9/TutorTests_H9_OurDeliveryServiceTest manually.</td></tr><tr class=\"\"><th scope=\"col\" class=\"\" id=\"cell-564\">H10 | Lauf Simulation, lauf!</th><th scope=\"col\" class=\"\" id=\"cell-565\">[0, 5]</th><th scope=\"col\" class=\"\" id=\"cell-566\">1</th><th scope=\"col\" class=\"\" id=\"cell-567\"></th></tr><tr class=\"\"><th scope=\"col\" class=\"\" id=\"cell-568\">H10.1 | Simulationen erstellen</th><th scope=\"col\" class=\"\" id=\"cell-569\">[0, 1]</th><th scope=\"col\" class=\"\" id=\"cell-570\">1</th><th scope=\"col\" class=\"\" id=\"cell-571\"></th></tr><tr class=\"\"><td class=\"\" id=\"cell-572\"><span class=\"badge\">94</span> Die Methode crateSimulations der Klasse RunnerImpl funktioniert vollständig korrekt</td><td class=\"\" id=\"cell-573\">[0, 1]</td><td class=\"table-success\" id=\"cell-574\">1</td><td class=\"\" id=\"cell-575\"></td></tr><tr class=\"\"><th scope=\"col\" class=\"\" id=\"cell-576\">H10.2 | Runner Implementationen</th><th scope=\"col\" class=\"\" id=\"cell-577\">[0, 4]</th><th scope=\"col\" class=\"\" id=\"cell-578\">0</th><th scope=\"col\" class=\"\" id=\"cell-579\"></th></tr><tr class=\"\"><td class=\"\" id=\"cell-580\"><span class=\"badge\">95</span> Die Methode run der Klasse RunnerImpl führt jede Simulation simulationRuns mal aus</td><td class=\"\" id=\"cell-581\">[0, 1]</td><td class=\"table-danger\" id=\"cell-582\">0</td><td class=\"\" id=\"cell-583\">Unsupported rating criteria: Travel Distance<br><br>there are 8 more failing tests</td></tr><tr class=\"\"><td class=\"\" id=\"cell-584\"><span class=\"badge\">96</span> Die Methode run der Klasse RunnerImpl geht korrekt mit dem SimulationSetupHandler und dem SimulationFinishedHandler um</td><td class=\"\" id=\"cell-585\">[0, 1]</td><td class=\"table-danger\" id=\"cell-586\">0</td><td class=\"\" id=\"cell-587\">Unsupported rating criteria: Travel Distance<br><br>there are 8 more failing tests</td></tr><tr class=\"\"><td class=\"\" id=\"cell-588\"><span class=\"badge\">97</span> Die Methode run der Klasse RunnerImpl geht korrekt mit dem resultHandler um</td><td class=\"\" id=\"cell-589\">[0, 1]</td><td class=\"table-danger\" id=\"cell-590\">0</td><td class=\"\" id=\"cell-591\">Unsupported rating criteria: Travel Distance<br><br>there are 8 more failing tests</td></tr><tr class=\"\"><td class=\"\" id=\"cell-592\"><span class=\"badge\">98</span> Die Methode run der Klasse RunnerImpl funktioniert vollständig korrekt</td><td class=\"\" id=\"cell-593\">[0, 1]</td><td class=\"table-danger\" id=\"cell-594\">0</td><td class=\"\" id=\"cell-595\">Unsupported rating criteria: Travel Distance<br><br>there are 8 more failing tests</td></tr><tr class=\"\"><th scope=\"col\" class=\"\" id=\"cell-596\">H11 | Die GUI</th><th scope=\"col\" class=\"\" id=\"cell-597\">[0, 54]</th><th scope=\"col\" class=\"\" id=\"cell-598\">[0, 54]</th><th scope=\"col\" class=\"\" id=\"cell-599\"></th></tr><tr class=\"\"><th scope=\"col\" class=\"\" id=\"cell-600\">H11.1 | Startmenü</th><th scope=\"col\" class=\"\" id=\"cell-601\">[0, 15]</th><th scope=\"col\" class=\"\" id=\"cell-602\">[0, 15]</th><th scope=\"col\" class=\"\" id=\"cell-603\"></th></tr><tr class=\"\"><td class=\"\" id=\"cell-604\"><span class=\"badge\">99</span> Es existiert eine Übersicht über die vorhandenen Probleme</td><td class=\"\" id=\"cell-605\">[0, 1]</td><td class=\"table-warning\" id=\"cell-606\">[0, 1]</td><td class=\"\" id=\"cell-607\">Not tested by public tests</td></tr><tr class=\"\"><td class=\"\" id=\"cell-608\"><span class=\"badge\">100</span> In der Übersicht werden alle Probleme auf eine sinnvolle Weise angezeigt</td><td class=\"\" id=\"cell-609\">[0, 1]</td><td class=\"table-warning\" id=\"cell-610\">[0, 1]</td><td class=\"\" id=\"cell-611\">Not tested by public tests</td></tr><tr class=\"\"><td class=\"\" id=\"cell-612\"><span class=\"badge\">101</span> Es existiert Übersicht über die Details eines ausgewählten Problems</td><td class=\"\" id=\"cell-613\">[0, 1]</td><td class=\"table-warning\" id=\"cell-614\">[0, 1]</td><td class=\"\" id=\"cell-615\">Not tested by public tests</td></tr><tr class=\"\"><td class=\"\" id=\"cell-616\"><span class=\"badge\">102</span> In der Detailansicht wird der Name des Problemes angezeigt</td><td class=\"\" id=\"cell-617\">[0, 1]</td><td class=\"table-warning\" id=\"cell-618\">[0, 1]</td><td class=\"\" id=\"cell-619\">Not tested by public tests</td></tr><tr class=\"\"><td class=\"\" id=\"cell-620\"><span class=\"badge\">103</span> In der Detailansicht wird die Simulationslänge des Problemes angezeigt</td><td class=\"\" id=\"cell-621\">[0, 1]</td><td class=\"table-warning\" id=\"cell-622\">[0, 1]</td><td class=\"\" id=\"cell-623\">Not tested by public tests</td></tr><tr class=\"\"><td class=\"\" id=\"cell-624\"><span class=\"badge\">104</span> In der Detailansicht ist erkennbar, für welche Bewertungskriterien ein Rater ausgewählt wurde</td><td class=\"\" id=\"cell-625\">[0, 1]</td><td class=\"table-warning\" id=\"cell-626\">[0, 1]</td><td class=\"\" id=\"cell-627\">Not tested by public tests</td></tr><tr class=\"\"><td class=\"\" id=\"cell-628\"><span class=\"badge\">105</span> In der Detailansicht ist erkennbar, für welche Bewertungskriterien welche Art von Rater ausgewählt wurde</td><td class=\"\" id=\"cell-629\">[0, 1]</td><td class=\"table-warning\" id=\"cell-630\">[0, 1]</td><td class=\"\" id=\"cell-631\">Not tested by public tests</td></tr><tr class=\"\"><td class=\"\" id=\"cell-632\"><span class=\"badge\">106</span> Wenn ein InTimeRater ausgewählt ist, ist in der Detailansicht ist erkennbar, welche Werte für ignoredTicksOff und maxTicksOff gewählt wurden</td><td class=\"\" id=\"cell-633\">[0, 1]</td><td class=\"table-warning\" id=\"cell-634\">[0, 1]</td><td class=\"\" id=\"cell-635\">Not tested by public tests</td></tr><tr class=\"\"><td class=\"\" id=\"cell-636\"><span class=\"badge\">107</span> Wenn ein AmountDeliveredRater ausgewählt ist, ist in der Detailansicht ist erkennbar, welche Wert für den Faktor gewählt wurden</td><td class=\"\" id=\"cell-637\">[0, 1]</td><td class=\"table-warning\" id=\"cell-638\">[0, 1]</td><td class=\"\" id=\"cell-639\">Not tested by public tests</td></tr><tr class=\"\"><td class=\"\" id=\"cell-640\"><span class=\"badge\">108</span> Wenn ein TravelDistanceRater ausgewählt ist, ist in der Detailansicht ist erkennbar, welche Wert für den Faktor gewählt wurden</td><td class=\"\" id=\"cell-641\">[0, 1]</td><td class=\"table-warning\" id=\"cell-642\">[0, 1]</td><td class=\"\" id=\"cell-643\">Not tested by public tests</td></tr><tr class=\"\"><td class=\"\" id=\"cell-644\"><span class=\"badge\">109</span> In der Detailansicht ist erkennbar, welcher Ordergenerator ausgewählt wurde</td><td class=\"\" id=\"cell-645\">[0, 1]</td><td class=\"table-warning\" id=\"cell-646\">[0, 1]</td><td class=\"\" id=\"cell-647\">Not tested by public tests</td></tr><tr class=\"\"><td class=\"\" id=\"cell-648\"><span class=\"badge\">110</span> Wenn ein FridayOrdergenerator ausgewählt ist, ist in der Detailansicht ist erkennbar, welche Werte für orderCount, deliveryInterval, maxWeight, lastTick, variance und seed gewählt wurden</td><td class=\"\" id=\"cell-649\">[0, 1]</td><td class=\"table-warning\" id=\"cell-650\">[0, 1]</td><td class=\"\" id=\"cell-651\">Not tested by public tests</td></tr><tr class=\"\"><td class=\"\" id=\"cell-652\"><span class=\"badge\">111</span> In der Detailansicht werden alle Knoten und Kanten, inklusive Name und Position(en), angezeigt</td><td class=\"\" id=\"cell-653\">[0, 1]</td><td class=\"table-warning\" id=\"cell-654\">[0, 1]</td><td class=\"\" id=\"cell-655\">Not tested by public tests</td></tr><tr class=\"\"><td class=\"\" id=\"cell-656\"><span class=\"badge\">112</span> In der Detailansicht werden alle Fahrzeuge, inklusive Kapazität und Startposition, angezeigt</td><td class=\"\" id=\"cell-657\">[0, 1]</td><td class=\"table-warning\" id=\"cell-658\">[0, 1]</td><td class=\"\" id=\"cell-659\">Not tested by public tests</td></tr><tr class=\"\"><td class=\"\" id=\"cell-660\"><span class=\"badge\">113</span> In der Detailansicht ist erkennbar, welcher DistanceCalculator zu der Region des Problemes gehört</td><td class=\"\" id=\"cell-661\">[0, 1]</td><td class=\"table-warning\" id=\"cell-662\">[0, 1]</td><td class=\"\" id=\"cell-663\">Not tested by public tests</td></tr><tr class=\"\"><th scope=\"col\" class=\"\" id=\"cell-664\">H11.2 | Endmenü</th><th scope=\"col\" class=\"\" id=\"cell-665\">[0, 7]</th><th scope=\"col\" class=\"\" id=\"cell-666\">[0, 7]</th><th scope=\"col\" class=\"\" id=\"cell-667\"></th></tr><tr class=\"\"><td class=\"\" id=\"cell-668\"><span class=\"badge\">114</span> Die erreichte Punktezahl für das Bewertungskriterium IN_TIME wird korrekt angezeigt</td><td class=\"\" id=\"cell-669\">[0, 2]</td><td class=\"table-warning\" id=\"cell-670\">[0, 2]</td><td class=\"\" id=\"cell-671\">Not tested by public tests</td></tr><tr class=\"\"><td class=\"\" id=\"cell-672\"><span class=\"badge\">115</span> Die erreichte Punktezahl für das Bewertungskriterium AMOUNT_DELIVERED wird korrekt angezeigt</td><td class=\"\" id=\"cell-673\">[0, 2]</td><td class=\"table-warning\" id=\"cell-674\">[0, 2]</td><td class=\"\" id=\"cell-675\">Not tested by public tests</td></tr><tr class=\"\"><td class=\"\" id=\"cell-676\"><span class=\"badge\">116</span> Die erreichte Punktezahl für das Bewertungskriterium TRAVEL_DISTANCE wird korrekt angezeigt</td><td class=\"\" id=\"cell-677\">[0, 2]</td><td class=\"table-warning\" id=\"cell-678\">[0, 2]</td><td class=\"\" id=\"cell-679\">Not tested by public tests</td></tr><tr class=\"\"><td class=\"\" id=\"cell-680\"><span class=\"badge\">117</span> Die erreichte Punktezahlen werden korrekt angezeigt, wenn nicht für alle Bewertungskriterien Punktzahlen vorhanden sind</td><td class=\"\" id=\"cell-681\">[0, 1]</td><td class=\"table-warning\" id=\"cell-682\">[0, 1]</td><td class=\"\" id=\"cell-683\">Not tested by public tests</td></tr><tr class=\"\"><th scope=\"col\" class=\"\" id=\"cell-684\">H11.3 | Anzeige der Simulation</th><th scope=\"col\" class=\"\" id=\"cell-685\">[0, 7]</th><th scope=\"col\" class=\"\" id=\"cell-686\">[0, 7]</th><th scope=\"col\" class=\"\" id=\"cell-687\"></th></tr><tr class=\"\"><td class=\"\" id=\"cell-688\"><span class=\"badge\">118</span> Es existiert eine Übersicht über alle Fahrzeuge</td><td class=\"\" id=\"cell-689\">[0, 1]</td><td class=\"table-warning\" id=\"cell-690\">[0, 1]</td><td class=\"\" id=\"cell-691\">Not tested by public tests</td></tr><tr class=\"\"><td class=\"\" id=\"cell-692\"><span class=\"badge\">119</span> Die Übersicht zeigt die ID aller Fahrzeuge an</td><td class=\"\" id=\"cell-693\">[0, 1]</td><td class=\"table-warning\" id=\"cell-694\">[0, 1]</td><td class=\"\" id=\"cell-695\">Not tested by public tests</td></tr><tr class=\"\"><td class=\"\" id=\"cell-696\"><span class=\"badge\">120</span> Die Übersicht über alle Fahrzeuge zeigt die Positionen der Fahrzeuge korrekt an, wenn diese sich auf einem Knoten befinden</td><td class=\"\" id=\"cell-697\">[0, 1]</td><td class=\"table-warning\" id=\"cell-698\">[0, 1]</td><td class=\"\" id=\"cell-699\">Not tested by public tests</td></tr><tr class=\"\"><td class=\"\" id=\"cell-700\"><span class=\"badge\">121</span> Die Übersicht über alle Fahrzeuge zeigt die Positionen der Fahrzeuge korrekt an, wenn diese sich auf einer Kante befinden</td><td class=\"\" id=\"cell-701\">[0, 1]</td><td class=\"table-warning\" id=\"cell-702\">[0, 1]</td><td class=\"\" id=\"cell-703\">Not tested by public tests</td></tr><tr class=\"\"><td class=\"\" id=\"cell-704\"><span class=\"badge\">122</span> Die Übersicht über alle Fahrzeuge zeigt die Essen der Bestellungen an, welche sich auf einem Fahrzeug befinden</td><td class=\"\" id=\"cell-705\">[0, 1]</td><td class=\"table-warning\" id=\"cell-706\">[0, 1]</td><td class=\"\" id=\"cell-707\">Not tested by public tests</td></tr><tr class=\"\"><td class=\"\" id=\"cell-708\"><span class=\"badge\">123</span> Die Übersicht über alle Fahrzeuge wird in jedem Tick korrekt aktualisiert</td><td class=\"\" id=\"cell-709\">[0, 2]</td><td class=\"table-warning\" id=\"cell-710\">[0, 2]</td><td class=\"\" id=\"cell-711\">Not tested by public tests</td></tr><tr class=\"\"><th scope=\"col\" class=\"\" id=\"cell-712\">H11.4 | Erstellen weitere Probleme</th><th scope=\"col\" class=\"\" id=\"cell-713\">[0, 25]</th><th scope=\"col\" class=\"\" id=\"cell-714\">[0, 25]</th><th scope=\"col\" class=\"\" id=\"cell-715\"></th></tr><tr class=\"\"><td class=\"\" id=\"cell-716\"><span class=\"badge\">124</span> Es können Probleme aus der Übersicht entfernt werden, worauf diese nicht simuliert werden</td><td class=\"\" id=\"cell-717\">[0, 1]</td><td class=\"table-warning\" id=\"cell-718\">[0, 1]</td><td class=\"\" id=\"cell-719\">Not tested by public tests</td></tr><tr class=\"\"><td class=\"\" id=\"cell-720\"><span class=\"badge\">125</span> Es existiert ein Knopf zum Hinzufügen neuer Probleme, welcher eine neue Szene öffnet</td><td class=\"\" id=\"cell-721\">[0, 1]</td><td class=\"table-warning\" id=\"cell-722\">[0, 1]</td><td class=\"\" id=\"cell-723\">Not tested by public tests</td></tr><tr class=\"\"><td class=\"\" id=\"cell-724\"><span class=\"badge\">126</span> Es gibt eine Auswahl, ob entweder ein existierend hinzugefügt werden soll oder ein neues erzeugt werden soll</td><td class=\"\" id=\"cell-725\">[0, 1]</td><td class=\"table-warning\" id=\"cell-726\">[0, 1]</td><td class=\"\" id=\"cell-727\">Not tested by public tests</td></tr><tr class=\"\"><td class=\"\" id=\"cell-728\"><span class=\"badge\">127</span> Wenn ein existierendes Problem hinzugefügt wird, werden alle Probleme angezeigt</td><td class=\"\" id=\"cell-729\">[0, 1]</td><td class=\"table-warning\" id=\"cell-730\">[0, 1]</td><td class=\"\" id=\"cell-731\">Not tested by public tests</td></tr><tr class=\"\"><td class=\"\" id=\"cell-732\"><span class=\"badge\">128</span> Wenn ein existierendes Problem hinzugefügt wird, kann man eines der angezeigten Probleme auswählen und hinzufügen</td><td class=\"\" id=\"cell-733\">[0, 1]</td><td class=\"table-warning\" id=\"cell-734\">[0, 1]</td><td class=\"\" id=\"cell-735\">Not tested by public tests</td></tr><tr class=\"\"><td class=\"\" id=\"cell-736\"><span class=\"badge\">129</span> Wenn ein existierendes Problem hinzugefügt wird, werden keine Probleme angezeigt, welche bereits hinzugefügt sind</td><td class=\"\" id=\"cell-737\">[0, 1]</td><td class=\"table-warning\" id=\"cell-738\">[0, 1]</td><td class=\"\" id=\"cell-739\">Not tested by public tests</td></tr><tr class=\"\"><td class=\"\" id=\"cell-740\"><span class=\"badge\">130</span> Wenn ein neues Problem hinzugefügt wird, kann man den Namen des Problemes angeben</td><td class=\"\" id=\"cell-741\">[0, 1]</td><td class=\"table-warning\" id=\"cell-742\">[0, 1]</td><td class=\"\" id=\"cell-743\">Not tested by public tests</td></tr><tr class=\"\"><td class=\"\" id=\"cell-744\"><span class=\"badge\">131</span> Wenn ein neues Problem hinzugefügt wird, kann man die Simulationslänge angeben</td><td class=\"\" id=\"cell-745\">[0, 1]</td><td class=\"table-warning\" id=\"cell-746\">[0, 1]</td><td class=\"\" id=\"cell-747\">Not tested by public tests</td></tr><tr class=\"\"><td class=\"\" id=\"cell-748\"><span class=\"badge\">132</span> Wenn ein neues Problem hinzugefügt wird, kann man für jedes Bewertungskriterium auswählen, ob es verwendet werden soll</td><td class=\"\" id=\"cell-749\">[0, 1]</td><td class=\"table-warning\" id=\"cell-750\">[0, 1]</td><td class=\"\" id=\"cell-751\">Not tested by public tests</td></tr><tr class=\"\"><td class=\"\" id=\"cell-752\"><span class=\"badge\">133</span> Wenn ein neues Problem hinzugefügt wird, kann man die einzelnen Parameter der Rater angeben</td><td class=\"\" id=\"cell-753\">[0, 1]</td><td class=\"table-warning\" id=\"cell-754\">[0, 1]</td><td class=\"\" id=\"cell-755\">Not tested by public tests</td></tr><tr class=\"\"><td class=\"\" id=\"cell-756\"><span class=\"badge\">134</span> Wenn ein neues Problem hinzugefügt wird, kann man auswählen, welche OrderGenerator verwendet werden soll</td><td class=\"\" id=\"cell-757\">[0, 1]</td><td class=\"table-warning\" id=\"cell-758\">[0, 1]</td><td class=\"\" id=\"cell-759\">Not tested by public tests</td></tr><tr class=\"\"><td class=\"\" id=\"cell-760\"><span class=\"badge\">135</span> Wenn ein neues Problem hinzugefügt wird und ein FridayOrderGenerator verwendet wird, kann man die Werte der einzelnen Parameter angeben</td><td class=\"\" id=\"cell-761\">[0, 1]</td><td class=\"table-warning\" id=\"cell-762\">[0, 1]</td><td class=\"\" id=\"cell-763\">Not tested by public tests</td></tr><tr class=\"\"><td class=\"\" id=\"cell-764\"><span class=\"badge\">136</span> Wenn ein neues Problem hinzugefügt wird, kann man den verwendeten DistanceCalculator auswählen</td><td class=\"\" id=\"cell-765\">[0, 1]</td><td class=\"table-warning\" id=\"cell-766\">[0, 1]</td><td class=\"\" id=\"cell-767\">Not tested by public tests</td></tr><tr class=\"\"><td class=\"\" id=\"cell-768\"><span class=\"badge\">137</span> Wenn ein neues Problem hinzugefügt wird, wird der momentane Stand der Region in einem MapPane angezeigt</td><td class=\"\" id=\"cell-769\">[0, 1]</td><td class=\"table-warning\" id=\"cell-770\">[0, 1]</td><td class=\"\" id=\"cell-771\">Not tested by public tests</td></tr><tr class=\"\"><td class=\"\" id=\"cell-772\"><span class=\"badge\">138</span> Wenn ein neues Problem hinzugefügt wird, kann man einen Knoten und eine Nachbarschaft mit gewählter Position und Name hinzufügen</td><td class=\"\" id=\"cell-773\">[0, 1]</td><td class=\"table-warning\" id=\"cell-774\">[0, 1]</td><td class=\"\" id=\"cell-775\">Not tested by public tests</td></tr><tr class=\"\"><td class=\"\" id=\"cell-776\"><span class=\"badge\">139</span> Wenn ein neues Problem hinzugefügt wird, kann man eine Kante mit gewählter Position und Name hinzufügen</td><td class=\"\" id=\"cell-777\">[0, 1]</td><td class=\"table-warning\" id=\"cell-778\">[0, 1]</td><td class=\"\" id=\"cell-779\">Not tested by public tests</td></tr><tr class=\"\"><td class=\"\" id=\"cell-780\"><span class=\"badge\">140</span> Wenn ein neues Problem hinzugefügt wird, kann man beim Hinzufügen eines Restaurant aus einem der Presets aus dem Interface auswählen</td><td class=\"\" id=\"cell-781\">[0, 1]</td><td class=\"table-warning\" id=\"cell-782\">[0, 1]</td><td class=\"\" id=\"cell-783\">Not tested by public tests</td></tr><tr class=\"\"><td class=\"\" id=\"cell-784\"><span class=\"badge\">141</span> Wenn ein neues Problem hinzugefügt wird, kann man ein Fahrzeug mit gewählter Position und Kapazität hinzufügen</td><td class=\"\" id=\"cell-785\">[0, 1]</td><td class=\"table-warning\" id=\"cell-786\">[0, 1]</td><td class=\"\" id=\"cell-787\">Not tested by public tests</td></tr><tr class=\"\"><td class=\"\" id=\"cell-788\"><span class=\"badge\">142</span> Wenn ein neues Problem hinzugefügt wird, können nur valide Knoten und Kanten hinzugefügt werden</td><td class=\"\" id=\"cell-789\">[0, 1]</td><td class=\"table-warning\" id=\"cell-790\">[0, 1]</td><td class=\"\" id=\"cell-791\">Not tested by public tests</td></tr><tr class=\"\"><td class=\"\" id=\"cell-792\"><span class=\"badge\">143</span> Wenn ein neues Problem hinzugefügt wird, kann man ausgewählte Knoten wieder entfernen</td><td class=\"\" id=\"cell-793\">[0, 1]</td><td class=\"table-warning\" id=\"cell-794\">[0, 1]</td><td class=\"\" id=\"cell-795\">Not tested by public tests</td></tr><tr class=\"\"><td class=\"\" id=\"cell-796\"><span class=\"badge\">144</span> Wenn ein neues Problem hinzugefügt wird, kann man ausgewählte Kanten wieder entfernen</td><td class=\"\" id=\"cell-797\">[0, 1]</td><td class=\"table-warning\" id=\"cell-798\">[0, 1]</td><td class=\"\" id=\"cell-799\">Not tested by public tests</td></tr><tr class=\"\"><td class=\"\" id=\"cell-800\"><span class=\"badge\">145</span> Wenn ein neues Problem hinzugefügt wird, kann man ausgewählte Fahrzeuge wieder entfernen</td><td class=\"\" id=\"cell-801\">[0, 1]</td><td class=\"table-warning\" id=\"cell-802\">[0, 1]</td><td class=\"\" id=\"cell-803\">Not tested by public tests</td></tr><tr class=\"\"><td class=\"\" id=\"cell-804\"><span class=\"badge\">146</span> Nachdem ein neues Problem hinzugefügt wurde, wird es mithilfe der Methode IOHelper.writeProblem gespeichert</td><td class=\"\" id=\"cell-805\">[0, 1]</td><td class=\"table-warning\" id=\"cell-806\">[0, 1]</td><td class=\"\" id=\"cell-807\">Not tested by public tests</td></tr><tr class=\"\"><td class=\"\" id=\"cell-808\"><span class=\"badge\">147</span> Es ist möglich das Erstellen eines neuen Problemes vorzeitigt über den Return Knopf abzubrechen, wodurch sich das Hauptmenü mit den davor ausgewählten Problemen öffnet</td><td class=\"\" id=\"cell-809\">[0, 1]</td><td class=\"table-warning\" id=\"cell-810\">[0, 1]</td><td class=\"\" id=\"cell-811\">Not tested by public tests</td></tr><tr class=\"\"><td class=\"\" id=\"cell-812\"><span class=\"badge\">148</span> Die Option, ein neues Problem hinzuzufügen, kann nur gewählt werden, wenn alle Eigenschaften korrekt ausgewählt werden</td><td class=\"\" id=\"cell-813\">[0, 1]</td><td class=\"table-warning\" id=\"cell-814\">[0, 1]</td><td class=\"\" id=\"cell-815\">Not tested by public tests</td></tr><tr class=\"\"><th scope=\"col\" class=\"\" id=\"cell-816\">H12 | Unit Tests</th><th scope=\"col\" class=\"\" id=\"cell-817\">[0, 29]</th><th scope=\"col\" class=\"\" id=\"cell-818\">[0, 29]</th><th scope=\"col\" class=\"\" id=\"cell-819\"></th></tr><tr class=\"\"><th scope=\"col\" class=\"\" id=\"cell-820\">H12.1 | Object- und Comparable Tests</th><th scope=\"col\" class=\"\" id=\"cell-821\">[0, 10]</th><th scope=\"col\" class=\"\" id=\"cell-822\">[0, 10]</th><th scope=\"col\" class=\"\" id=\"cell-823\"></th></tr><tr class=\"\"><td class=\"\" id=\"cell-824\"><span class=\"badge\">149</span> Die Methode initialize der Klasse ObjectUnitTests initialisiert die Arrays testObjects und testObjectsReferenceEquality korrekt</td><td class=\"\" id=\"cell-825\">[0, 1]</td><td class=\"table-warning\" id=\"cell-826\">[0, 1]</td><td class=\"\" id=\"cell-827\">Not tested by public tests</td></tr><tr class=\"\"><td class=\"\" id=\"cell-828\"><span class=\"badge\">150</span> Die Methode initialize der Klasse ObjectUnitTests initialisiert alle Arrays korrekt</td><td class=\"\" id=\"cell-829\">[0, 1]</td><td class=\"table-warning\" id=\"cell-830\">[0, 1]</td><td class=\"\" id=\"cell-831\">Not tested by public tests</td></tr><tr class=\"\"><td class=\"\" id=\"cell-832\"><span class=\"badge\">151</span> Die Methode testEquals der Klasse ObjectUnitTests testet die Gleichheit der Elemente korrekt</td><td class=\"\" id=\"cell-833\">[0, 1]</td><td class=\"table-warning\" id=\"cell-834\">[0, 1]</td><td class=\"\" id=\"cell-835\">Not tested by public tests</td></tr><tr class=\"\"><td class=\"\" id=\"cell-836\"><span class=\"badge\">152</span> Die Methode testEquals der Klasse ObjectUnitTests testet die Ungleichheit der Elemente korrekt</td><td class=\"\" id=\"cell-837\">[0, 1]</td><td class=\"table-warning\" id=\"cell-838\">[0, 1]</td><td class=\"\" id=\"cell-839\">Not tested by public tests</td></tr><tr class=\"\"><td class=\"\" id=\"cell-840\"><span class=\"badge\">153</span> Die Methode testEquals der Klasse ObjectUnitTests testHashCode funktioniert vollständig korrekt</td><td class=\"\" id=\"cell-841\">[0, 1]</td><td class=\"table-warning\" id=\"cell-842\">[0, 1]</td><td class=\"\" id=\"cell-843\">Not tested by public tests</td></tr><tr class=\"\"><td class=\"\" id=\"cell-844\"><span class=\"badge\">154</span> Die Methode testToString der Klasse ObjectUnitTests funktioniert vollständig korrekt</td><td class=\"\" id=\"cell-845\">[0, 1]</td><td class=\"table-warning\" id=\"cell-846\">[0, 1]</td><td class=\"\" id=\"cell-847\">Not tested by public tests</td></tr><tr class=\"\"><td class=\"\" id=\"cell-848\"><span class=\"badge\">155</span> Die Methode initialize der Klasse ComparableUnitTests initialisiert das Array korrekt</td><td class=\"\" id=\"cell-849\">[0, 1]</td><td class=\"table-warning\" id=\"cell-850\">[0, 1]</td><td class=\"\" id=\"cell-851\">Not tested by public tests</td></tr><tr class=\"\"><td class=\"\" id=\"cell-852\"><span class=\"badge\">156</span> Die Methode testBiggerThen der Klasse ComparableUnitTests funktioniert vollständig korrekt</td><td class=\"\" id=\"cell-853\">[0, 1]</td><td class=\"table-warning\" id=\"cell-854\">[0, 1]</td><td class=\"\" id=\"cell-855\">Not tested by public tests</td></tr><tr class=\"\"><td class=\"\" id=\"cell-856\"><span class=\"badge\">157</span> Die Methode testAsBigAs der Klasse ComparableUnitTests funktioniert vollständig korrekt</td><td class=\"\" id=\"cell-857\">[0, 1]</td><td class=\"table-warning\" id=\"cell-858\">[0, 1]</td><td class=\"\" id=\"cell-859\">Not tested by public tests</td></tr><tr class=\"\"><td class=\"\" id=\"cell-860\"><span class=\"badge\">158</span> Die Methode testSmallerThen der Klasse ComparableUnitTests funktioniert vollständig korrekt</td><td class=\"\" id=\"cell-861\">[0, 1]</td><td class=\"table-warning\" id=\"cell-862\">[0, 1]</td><td class=\"\" id=\"cell-863\">Not tested by public tests</td></tr><tr class=\"\"><th scope=\"col\" class=\"\" id=\"cell-864\">H12.2 | Location</th><th scope=\"col\" class=\"\" id=\"cell-865\">[0, 3]</th><th scope=\"col\" class=\"\" id=\"cell-866\">[0, 3]</th><th scope=\"col\" class=\"\" id=\"cell-867\"></th></tr><tr class=\"\"><td class=\"\" id=\"cell-868\"><span class=\"badge\">159</span> Die methode Initialize der Klasse LocationUnitTests initialisiert die ObjectUnitTests korrekt</td><td class=\"\" id=\"cell-869\">[0, 1]</td><td class=\"table-warning\" id=\"cell-870\">[0, 1]</td><td class=\"\" id=\"cell-871\">Not tested by public tests</td></tr><tr class=\"\"><td class=\"\" id=\"cell-872\"><span class=\"badge\">160</span> Die methode Initialize der Klasse LocationUnitTests initialisiert die ComparableUnitTests korrekt</td><td class=\"\" id=\"cell-873\">[0, 1]</td><td class=\"table-warning\" id=\"cell-874\">[0, 1]</td><td class=\"\" id=\"cell-875\">Not tested by public tests</td></tr><tr class=\"\"><td class=\"\" id=\"cell-876\"><span class=\"badge\">161</span> Die test Methoden der Klasse LocationUnitTests funktionieren vollständig korrekt</td><td class=\"\" id=\"cell-877\">[0, 1]</td><td class=\"table-warning\" id=\"cell-878\">[0, 1]</td><td class=\"\" id=\"cell-879\">Not tested by public tests</td></tr><tr class=\"\"><th scope=\"col\" class=\"\" id=\"cell-880\">H12.3 | RegionImpl</th><th scope=\"col\" class=\"\" id=\"cell-881\">[0, 6]</th><th scope=\"col\" class=\"\" id=\"cell-882\">[0, 6]</th><th scope=\"col\" class=\"\" id=\"cell-883\"></th></tr><tr class=\"\"><td class=\"\" id=\"cell-884\"><span class=\"badge\">162</span> Die Methode initialize der Klasse RegionImplUnitTests initialisiert die ObjectUnitTests korrekt</td><td class=\"\" id=\"cell-885\">[0, 2]</td><td class=\"table-warning\" id=\"cell-886\">[0, 2]</td><td class=\"\" id=\"cell-887\">Not tested by public tests</td></tr><tr class=\"\"><td class=\"\" id=\"cell-888\"><span class=\"badge\">163</span> Die Methode testNodes der Klasse RegionImplUnitTests funktioniert vollständig korrekt</td><td class=\"\" id=\"cell-889\">[0, 2]</td><td class=\"table-warning\" id=\"cell-890\">[0, 2]</td><td class=\"\" id=\"cell-891\">Not tested by public tests</td></tr><tr class=\"\"><td class=\"\" id=\"cell-892\"><span class=\"badge\">164</span> Die Methode testEdges der Klasse RegionImplUnitTests funktioniert vollständig korrekt</td><td class=\"\" id=\"cell-893\">[0, 2]</td><td class=\"table-warning\" id=\"cell-894\">[0, 2]</td><td class=\"\" id=\"cell-895\">Not tested by public tests</td></tr><tr class=\"\"><th scope=\"col\" class=\"\" id=\"cell-896\">H12.4 | NodeImpl</th><th scope=\"col\" class=\"\" id=\"cell-897\">[0, 6]</th><th scope=\"col\" class=\"\" id=\"cell-898\">[0, 6]</th><th scope=\"col\" class=\"\" id=\"cell-899\"></th></tr><tr class=\"\"><td class=\"\" id=\"cell-900\"><span class=\"badge\">165</span> Die Methode initialize der Klasse NodeImplUnitTests initialisiert die Region korrekt</td><td class=\"\" id=\"cell-901\">[0, 1]</td><td class=\"table-warning\" id=\"cell-902\">[0, 1]</td><td class=\"\" id=\"cell-903\">Not tested by public tests</td></tr><tr class=\"\"><td class=\"\" id=\"cell-904\"><span class=\"badge\">166</span> Die Methode initialize der Klasse NodeImplUnitTests initialisiert die ObjectUnitTests korrekt und verwendet die zugehörigen Test Methoden korrekt</td><td class=\"\" id=\"cell-905\">[0, 1]</td><td class=\"table-warning\" id=\"cell-906\">[0, 1]</td><td class=\"\" id=\"cell-907\">Not tested by public tests</td></tr><tr class=\"\"><td class=\"\" id=\"cell-908\"><span class=\"badge\">167</span> Die Methode initialize der Klasse NodeImplUnitTests initialisiert die ComparableUnitTests korrekt und verwendet die zugehörigen Test Methoden korrekt</td><td class=\"\" id=\"cell-909\">[0, 1]</td><td class=\"table-warning\" id=\"cell-910\">[0, 1]</td><td class=\"\" id=\"cell-911\">Not tested by public tests</td></tr><tr class=\"\"><td class=\"\" id=\"cell-912\"><span class=\"badge\">168</span> Die Methode testGetEdge der Klasse NodeImplUnitTests funktioniert vollständig korrekt</td><td class=\"\" id=\"cell-913\">[0, 1]</td><td class=\"table-warning\" id=\"cell-914\">[0, 1]</td><td class=\"\" id=\"cell-915\">Not tested by public tests</td></tr><tr class=\"\"><td class=\"\" id=\"cell-916\"><span class=\"badge\">169</span> Die Methode testAdjacentNodes der Klasse NodeImplUnitTests funktioniert vollständig korrekt</td><td class=\"\" id=\"cell-917\">[0, 1]</td><td class=\"table-warning\" id=\"cell-918\">[0, 1]</td><td class=\"\" id=\"cell-919\">Not tested by public tests</td></tr><tr class=\"\"><td class=\"\" id=\"cell-920\"><span class=\"badge\">170</span> Die Methode testAdjacentEdges der Klasse NodeImplUnitTests funktioniert vollständig korrekt</td><td class=\"\" id=\"cell-921\">[0, 1]</td><td class=\"table-warning\" id=\"cell-922\">[0, 1]</td><td class=\"\" id=\"cell-923\">Not tested by public tests</td></tr><tr class=\"\"><th scope=\"col\" class=\"\" id=\"cell-924\">H12.5 | EdgeImpl</th><th scope=\"col\" class=\"\" id=\"cell-925\">[0, 4]</th><th scope=\"col\" class=\"\" id=\"cell-926\">[0, 4]</th><th scope=\"col\" class=\"\" id=\"cell-927\"></th></tr><tr class=\"\"><td class=\"\" id=\"cell-928\"><span class=\"badge\">171</span> Die Methode initialize der Klasse EdgeImplUnitTests initialisiert die Region korrekt</td><td class=\"\" id=\"cell-929\">[0, 1]</td><td class=\"table-warning\" id=\"cell-930\">[0, 1]</td><td class=\"\" id=\"cell-931\">Not tested by public tests</td></tr><tr class=\"\"><td class=\"\" id=\"cell-932\"><span class=\"badge\">172</span> Die Methode initialize der Klasse EdgeImplUnitTests initialisiert die ObjectUnitTests korrekt und verwendet die zugehörigen Test Methoden korrekt</td><td class=\"\" id=\"cell-933\">[0, 1]</td><td class=\"table-warning\" id=\"cell-934\">[0, 1]</td><td class=\"\" id=\"cell-935\">Not tested by public tests</td></tr><tr class=\"\"><td class=\"\" id=\"cell-936\"><span class=\"badge\">173</span> Die Methode initialize der Klasse EdgeImplUnitTests initialisiert die ComparableUnitTests korrekt und verwendet die zugehörigen Test Methoden korrekt</td><td class=\"\" id=\"cell-937\">[0, 1]</td><td class=\"table-warning\" id=\"cell-938\">[0, 1]</td><td class=\"\" id=\"cell-939\">Not tested by public tests</td></tr><tr class=\"\"><td class=\"\" id=\"cell-940\"><span class=\"badge\">174</span> Die Methode testGetNode der Klasse EdgeImplUnitTests funktioniert vollständig korrekt</td><td class=\"\" id=\"cell-941\">[0, 1]</td><td class=\"table-warning\" id=\"cell-942\">[0, 1]</td><td class=\"\" id=\"cell-943\">Not tested by public tests</td></tr><tr class=\"\"><th scope=\"col\" class=\"\" id=\"cell-944\">Gesamt</th><th scope=\"col\" class=\"\" id=\"cell-945\">[0, 200]</th><th scope=\"col\" class=\"\" id=\"cell-946\">[83, 186]</th><th scope=\"col\" class=\"\" id=\"cell-947\"></th></tr></tbody></table></div></body></html>"}